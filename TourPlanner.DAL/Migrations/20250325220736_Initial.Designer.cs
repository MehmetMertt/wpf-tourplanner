// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TourPlanner.DAL;

#nullable disable

namespace TourPlanner.DAL.Migrations
{
    [DbContext(typeof(TourDbContext))]
    [Migration("20250325220736_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TourPlanner.DAL.Dto.TourDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("TotalDistance")
                        .HasColumnType("real");

                    b.Property<string>("TotalDuration")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("TourPlanner.DAL.Dto.TourLogsDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("Distance")
                        .HasColumnType("real");

                    b.Property<float>("Duration")
                        .HasColumnType("real");

                    b.Property<Guid?>("TourDtoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TourDtoId");

                    b.ToTable("TourLogs");
                });

            modelBuilder.Entity("TourPlanner.DAL.Dto.TourLogsDto", b =>
                {
                    b.HasOne("TourPlanner.DAL.Dto.TourDto", null)
                        .WithMany("TourLogs")
                        .HasForeignKey("TourDtoId");
                });

            modelBuilder.Entity("TourPlanner.DAL.Dto.TourDto", b =>
                {
                    b.Navigation("TourLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
